"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/druck/page",{

/***/ "(app-pages-browser)/./src/lib/pdf-generator.ts":
/*!**********************************!*\
  !*** ./src/lib/pdf-generator.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePDF: function() { return /* binding */ generatePDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var _data_paper_sizes_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data/paper-sizes.json */ \"(app-pages-browser)/./src/data/paper-sizes.json\");\n/* harmony import */ var _config_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/config/settings */ \"(app-pages-browser)/./src/config/settings.ts\");\n// !!! WICHTIG: Diese Datei ist essentiell für die PDF-Generierung und darf nicht gelöscht werden !!!\n// !!! Sie enthält die Logik für die Erstellung der PDF-Dokumente mit allen Einstellungen !!!\n\n\n\nasync function generatePDF(options) {\n    // Finde die ausgewählte Papiergröße\n    const allSizes = [\n        ..._data_paper_sizes_json__WEBPACK_IMPORTED_MODULE_1__.poster.portrait,\n        ..._data_paper_sizes_json__WEBPACK_IMPORTED_MODULE_1__.poster.landscape\n    ];\n    const selectedSize = allSizes.find((size)=>size.id === options.pageSize);\n    if (!selectedSize) {\n        throw new Error(\"Ung\\xfcltige Papiergr\\xf6\\xdfe\");\n    }\n    // Extrahiere die Maße\n    const { width, height } = selectedSize;\n    const orientation = options.pageSize.startsWith(\"l\") ? \"landscape\" : \"portrait\";\n    const { bleed, fontScaleFactor, minMargin } = _config_settings__WEBPACK_IMPORTED_MODULE_2__.pdfSettings;\n    // Erstelle PDF\n    const pdf = new jspdf__WEBPACK_IMPORTED_MODULE_0__.jsPDF({\n        orientation,\n        unit: \"mm\",\n        format: [\n            width + bleed * 2,\n            height + bleed * 2\n        ]\n    });\n    // Setze Hintergrundfarbe\n    const hexToRgb = (hex)=>{\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : {\n            r: 255,\n            g: 255,\n            b: 255\n        };\n    };\n    const bgColor = hexToRgb(options.backgroundColor);\n    pdf.setFillColor(bgColor.r, bgColor.g, bgColor.b);\n    pdf.rect(0, 0, width + bleed * 2, height + bleed * 2, \"F\");\n    // Füge alle Textblöcke ein\n    options.content.forEach((block)=>{\n        // Schriftgrößenberechnung mit Skalierungsfaktor aus den Einstellungen\n        const fontSize = Math.round(block.fontSize * fontScaleFactor);\n        pdf.setFontSize(fontSize);\n        // Setze die Textfarbe\n        const textColor = hexToRgb(block.color);\n        pdf.setTextColor(textColor.r, textColor.g, textColor.b);\n        // Berechne die Position\n        const pageWidth = width + bleed * 2;\n        const pageHeight = height + bleed * 2;\n        const xPos = pageWidth * block.x / 100;\n        const yPos = pageHeight * block.y / 100;\n        // Setze Zeilenhöhe\n        const lineHeight = block.lineHeight || 1.2;\n        pdf.setLineHeightFactor(lineHeight);\n        // Setze Buchstabenabstand\n        if (block.letterSpacing) {\n            pdf.setCharSpace(block.letterSpacing);\n        }\n        // Text zeichnen mit Ausrichtung\n        if (block.multiline) {\n            var _block_fontStyle;\n            const maxWidth = pageWidth * (block.width || 20) / 100;\n            // Berechne X-Position basierend auf Ausrichtung\n            let alignedX = xPos;\n            if (block.textAlign === \"center\") {\n                alignedX = xPos;\n            } else if (block.textAlign === \"right\") {\n                alignedX = xPos;\n            } else {\n                alignedX = xPos;\n            }\n            // Setze die korrekte Schriftart und Gewicht\n            const fontName = block.fontFamily || \"helvetica\";\n            const fontStyle = ((_block_fontStyle = block.fontStyle) === null || _block_fontStyle === void 0 ? void 0 : _block_fontStyle.includes(\"italic\")) ? \"italic\" : \"normal\";\n            const fontWeight = Number(block.fontWeight) >= 600 ? \"bold\" : \"normal\";\n            // Kombiniere Stil und Gewicht\n            let style = fontWeight;\n            if (fontStyle === \"italic\") {\n                style = fontWeight === \"bold\" ? \"bolditalic\" : \"italic\";\n            }\n            pdf.setFont(fontName, style);\n            pdf.text(block.text, alignedX, yPos, {\n                maxWidth,\n                align: block.textAlign || \"left\"\n            });\n        } else {\n            var _block_fontStyle1;\n            // Für einzeilige Texte\n            // Setze die korrekte Schriftart und Gewicht\n            const fontName = block.fontFamily || \"helvetica\";\n            const fontStyle = ((_block_fontStyle1 = block.fontStyle) === null || _block_fontStyle1 === void 0 ? void 0 : _block_fontStyle1.includes(\"italic\")) ? \"italic\" : \"normal\";\n            const fontWeight = Number(block.fontWeight) >= 600 ? \"bold\" : \"normal\";\n            // Kombiniere Stil und Gewicht\n            let style = fontWeight;\n            if (fontStyle === \"italic\") {\n                style = fontWeight === \"bold\" ? \"bolditalic\" : \"italic\";\n            }\n            pdf.setFont(fontName, style);\n            // Berechne X-Position basierend auf Ausrichtung\n            let alignedX = xPos;\n            if (block.textAlign === \"center\") {\n                alignedX = xPos;\n            } else if (block.textAlign === \"right\") {\n                alignedX = xPos;\n            }\n            pdf.text(block.text, alignedX, yPos, {\n                align: block.textAlign || \"left\"\n            });\n        }\n    });\n    // PDF als ArrayBuffer zurückgeben\n    const arrayBuffer = pdf.output(\"arraybuffer\");\n    return new Uint8Array(arrayBuffer);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/pdf-generator.ts\n"));

/***/ })

});