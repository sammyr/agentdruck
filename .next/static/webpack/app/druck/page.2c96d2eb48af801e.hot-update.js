"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/druck/page",{

/***/ "(app-pages-browser)/./src/lib/pdf-generator.ts":
/*!**********************************!*\
  !*** ./src/lib/pdf-generator.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePDF: function() { return /* binding */ generatePDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var _data_paper_sizes_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data/paper-sizes.json */ \"(app-pages-browser)/./src/data/paper-sizes.json\");\n/* harmony import */ var _config_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/config/settings */ \"(app-pages-browser)/./src/config/settings.ts\");\n/* harmony import */ var _data_fonts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/data/fonts */ \"(app-pages-browser)/./src/data/fonts.ts\");\n// !!! WICHTIG: Diese Datei ist essentiell für die PDF-Generierung und darf nicht gelöscht werden !!!\n// !!! Sie enthält die Logik für die Erstellung der PDF-Dokumente mit allen Einstellungen !!!\n\n\n\n\n// Konvertiert Hex-Farbe in RGB\nfunction hexToRgb(hex) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : {\n        r: 255,\n        g: 255,\n        b: 255\n    };\n}\n// Konvertiere ArrayBuffer zu Base64\nfunction arrayBufferToBase64(buffer) {\n    let binary = \"\";\n    const bytes = new Uint8Array(buffer);\n    for(let i = 0; i < bytes.byteLength; i++){\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n}\n// Registriere die Schriftarten für jsPDF\nasync function registerFonts(pdf) {\n    for (const font of _data_fonts__WEBPACK_IMPORTED_MODULE_3__.fonts){\n        try {\n            // Lade die Regular-Version als Standardschrift\n            const regularWeight = font.weights.find((w)=>w.value === 400) || font.weights[0];\n            const fontPath = \"\".concat(font.path, \"/\").concat(regularWeight.file);\n            console.log(\"Lade Schriftart:\", fontPath);\n            const response = await fetch(fontPath);\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            const fontBuffer = await response.arrayBuffer();\n            const fontBase64 = arrayBufferToBase64(fontBuffer);\n            // Registriere die Basisschrift\n            pdf.addFileToVFS(\"\".concat(font.family, \".ttf\"), fontBase64);\n            pdf.addFont(\"\".concat(font.family, \".ttf\"), font.family, \"normal\");\n            // Lade zusätzliche Gewichte\n            for (const weight of font.weights){\n                if (weight.value !== 400) {\n                    const weightPath = \"\".concat(font.path, \"/\").concat(weight.file);\n                    const weightResponse = await fetch(weightPath);\n                    if (weightResponse.ok) {\n                        const weightBuffer = await weightResponse.arrayBuffer();\n                        const weightBase64 = arrayBufferToBase64(weightBuffer);\n                        const weightStyle = _config_settings__WEBPACK_IMPORTED_MODULE_2__.pdfSettings.weightMapping[weight.value];\n                        pdf.addFileToVFS(\"\".concat(font.family, \"-\").concat(weightStyle, \".ttf\"), weightBase64);\n                        pdf.addFont(\"\".concat(font.family, \"-\").concat(weightStyle, \".ttf\"), font.family, weightStyle);\n                    }\n                }\n            }\n            console.log(\"Schriftart erfolgreich geladen:\", font.family);\n        } catch (error) {\n            console.error(\"Fehler beim Laden der Schriftart:\", font.family, error);\n        }\n    }\n}\n// Setzt die Textstile für das PDF\nfunction applyTextStyle(pdf, block) {\n    try {\n        // Verwende die tatsächliche Schriftart\n        const fontFamily = block.fontFamily;\n        const fontWeight = typeof block.fontWeight === \"string\" ? parseInt(block.fontWeight) : block.fontWeight;\n        const fontStyle = _config_settings__WEBPACK_IMPORTED_MODULE_2__.pdfSettings.weightMapping[fontWeight] || \"normal\";\n        // Setze die Schriftart\n        pdf.setFont(fontFamily, fontStyle);\n        // Schriftgrößenberechnung mit Skalierungsfaktor\n        const fontSize = Math.round(block.fontSize * _config_settings__WEBPACK_IMPORTED_MODULE_2__.pdfSettings.fontScaleFactor);\n        pdf.setFontSize(fontSize);\n        // Setze die Textfarbe\n        const textColor = hexToRgb(block.color);\n        pdf.setTextColor(textColor.r, textColor.g, textColor.b);\n        // Setze den Buchstabenabstand, falls vorhanden\n        if (block.letterSpacing) {\n            pdf.setCharSpace(block.letterSpacing);\n        }\n        // Setze die Zeilenhöhe, falls vorhanden\n        if (block.lineHeight) {\n            pdf.setLineHeightFactor(block.lineHeight);\n        }\n    } catch (error) {\n        console.error(\"Fehler beim Anwenden der Textstile:\", error);\n        // Fallback zu Standard-Schriftart\n        pdf.setFont(\"helvetica\", \"normal\");\n    }\n}\n// Berechnet die Position für den Text\nfunction calculateTextPosition(block, pageWidth, pageHeight) {\n    return {\n        x: block.x / 100 * pageWidth,\n        y: block.y / 100 * pageHeight\n    };\n}\n// Rendert einen Textblock im PDF\nfunction renderTextBlock(pdf, block, pageWidth, pageHeight) {\n    // Wende Textstile an\n    applyTextStyle(pdf, block);\n    // Berechne Position\n    const { x, y } = calculateTextPosition(block, pageWidth, pageHeight);\n    // Text einfügen\n    pdf.text(block.text, x, y, {\n        align: \"center\",\n        baseline: \"middle\",\n        maxWidth: pageWidth - _config_settings__WEBPACK_IMPORTED_MODULE_2__.pdfSettings.minMargin * 2\n    });\n}\nasync function generatePDF(options) {\n    // Finde die ausgewählte Papiergröße\n    const allSizes = [\n        ..._data_paper_sizes_json__WEBPACK_IMPORTED_MODULE_1__.poster.portrait,\n        ..._data_paper_sizes_json__WEBPACK_IMPORTED_MODULE_1__.poster.landscape\n    ];\n    const selectedSize = allSizes.find((size)=>size.id === options.pageSize);\n    if (!selectedSize) {\n        throw new Error(\"Ung\\xfcltige Papiergr\\xf6\\xdfe\");\n    }\n    // Extrahiere die Maße\n    const { width, height } = selectedSize;\n    const orientation = options.pageSize.startsWith(\"l\") ? \"landscape\" : \"portrait\";\n    const { bleed } = _config_settings__WEBPACK_IMPORTED_MODULE_2__.pdfSettings;\n    // Erstelle PDF\n    const pdf = new jspdf__WEBPACK_IMPORTED_MODULE_0__.jsPDF({\n        orientation,\n        unit: \"mm\",\n        format: [\n            width + bleed * 2,\n            height + bleed * 2\n        ]\n    });\n    // Registriere die Schriftarten\n    await registerFonts(pdf);\n    // Setze Hintergrundfarbe\n    const bgColor = hexToRgb(options.backgroundColor);\n    pdf.setFillColor(bgColor.r, bgColor.g, bgColor.b);\n    pdf.rect(0, 0, width + bleed * 2, height + bleed * 2, \"F\");\n    // Füge alle Textblöcke ein\n    const pageWidth = width + bleed * 2;\n    const pageHeight = height + bleed * 2;\n    options.content.forEach((block)=>{\n        renderTextBlock(pdf, block, pageWidth, pageHeight);\n    });\n    // PDF als Uint8Array zurückgeben\n    const arrayBuffer = pdf.output(\"arraybuffer\");\n    return new Uint8Array(arrayBuffer);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/pdf-generator.ts\n"));

/***/ })

});